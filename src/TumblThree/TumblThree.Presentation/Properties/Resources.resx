<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="AddBlog" xml:space="preserve">
    <value>Add Blog</value>
  </data>
  <data name="AddToQueue" xml:space="preserve">
    <value>Add to Queue</value>
  </data>
  <data name="BlogUrl" xml:space="preserve">
    <value>Enter URL:</value>
  </data>
  <data name="Browse" xml:space="preserve">
    <value>Browse</value>
  </data>
  <data name="ClearQueue" xml:space="preserve">
    <value>Clear queue</value>
  </data>
  <data name="ClipboardMonitor" xml:space="preserve">
    <value>Check Clipboard</value>
  </data>
  <data name="Crawl" xml:space="preserve">
    <value>Crawl</value>
  </data>
  <data name="CrawlSelection" xml:space="preserve">
    <value>Crawl selection</value>
  </data>
  <data name="DateAdded" xml:space="preserve">
    <value>Date Added</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="DownloadedFiles" xml:space="preserve">
    <value>Downloaded Files</value>
  </data>
  <data name="DownloadLocation" xml:space="preserve">
    <value>Download location</value>
  </data>
  <data name="EnqueueSelection" xml:space="preserve">
    <value>Enqueue selection</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="ErrorMessage" xml:space="preserve">
    <value>Error {0}: {1}</value>
  </data>
  <data name="InternalErrorDescription" xml:space="preserve">
    <value>Internal error description</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NumberOfDownloads" xml:space="preserve">
    <value>Number of Downloads</value>
  </data>
  <data name="OpenQueue" xml:space="preserve">
    <value>Open queue</value>
  </data>
  <data name="Pause" xml:space="preserve">
    <value>Pause</value>
  </data>
  <data name="Queue" xml:space="preserve">
    <value>Queue</value>
  </data>
  <data name="Rating" xml:space="preserve">
    <value>Rating</value>
  </data>
  <data name="RemoveBlog" xml:space="preserve">
    <value>Remove Blog</value>
  </data>
  <data name="RemoveFromQueue" xml:space="preserve">
    <value>Remove from Queue</value>
  </data>
  <data name="RemoveSelected" xml:space="preserve">
    <value>Remove selected</value>
  </data>
  <data name="Resume" xml:space="preserve">
    <value>Resume</value>
  </data>
  <data name="Return" xml:space="preserve">
    <value>Return</value>
  </data>
  <data name="SaveQueue" xml:space="preserve">
    <value>Save queue</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="ShiftReturn" xml:space="preserve">
    <value>Shift+Return</value>
  </data>
  <data name="ShowDetails" xml:space="preserve">
    <value>Show details</value>
  </data>
  <data name="ShowFiles" xml:space="preserve">
    <value>Show Files</value>
  </data>
  <data name="Stop" xml:space="preserve">
    <value>Stop</value>
  </data>
  <data name="Tags" xml:space="preserve">
    <value>Tags</value>
  </data>
  <data name="UnknownError" xml:space="preserve">
    <value>Unknown Application Error</value>
  </data>
  <data name="Url" xml:space="preserve">
    <value>Url</value>
  </data>
  <data name="ImageSize" xml:space="preserve">
    <value>Image size</value>
  </data>
  <data name="ParallelBlogs" xml:space="preserve">
    <value>Parallel blogs</value>
  </data>
  <data name="ParallelConnections" xml:space="preserve">
    <value>Parallel connections</value>
  </data>
  <data name="Online" xml:space="preserve">
    <value>Online</value>
  </data>
  <data name="Progress" xml:space="preserve">
    <value>Progress</value>
  </data>
  <data name="NumberOfItems" xml:space="preserve">
    <value>{0} Items</value>
  </data>
  <data name="OneItem" xml:space="preserve">
    <value>1 Item</value>
  </data>
  <data name="CheckStatus" xml:space="preserve">
    <value>Check blog online status on startup</value>
  </data>
  <data name="DeleteIndex" xml:space="preserve">
    <value>Delete only the index files (no downloaded images)</value>
  </data>
  <data name="RemoveIndex" xml:space="preserve">
    <value>Remove blog index after crawl</value>
  </data>
  <data name="SkipGif" xml:space="preserve">
    <value>Skip .gif files</value>
  </data>
  <data name="Info32Bit" xml:space="preserve">
    <value>32 Bit</value>
  </data>
  <data name="Info64Bit" xml:space="preserve">
    <value>64 Bit</value>
  </data>
  <data name="License" xml:space="preserve">
    <value>License</value>
  </data>
  <data name="NetFramework" xml:space="preserve">
    <value>.NET Framework</value>
  </data>
  <data name="Ok" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="OperatingSystem" xml:space="preserve">
    <value>Operating System</value>
  </data>
  <data name="Product" xml:space="preserve">
    <value>Product</value>
  </data>
  <data name="Version" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="Website" xml:space="preserve">
    <value>Website</value>
  </data>
  <data name="LastCompleteCrawl" xml:space="preserve">
    <value>Last Complete Crawl</value>
  </data>
  <data name="VisitBlog" xml:space="preserve">
    <value>Open the site in the web browser</value>
  </data>
  <data name="NumberOfImages" xml:space="preserve">
    <value>{0} Images</value>
  </data>
  <data name="DownloadedFilesOf" xml:space="preserve">
    <value>Downloaded files {0} of {1}</value>
  </data>
  <data name="DownloadImages" xml:space="preserve">
    <value>Download images</value>
  </data>
  <data name="DownloadVideos" xml:space="preserve">
    <value>Download videos (Tumblr.com self hosted)</value>
  </data>
  <data name="VideoSize" xml:space="preserve">
    <value>Video size</value>
  </data>
  <data name="Authenticate" xml:space="preserve">
    <value>Authenticate</value>
  </data>
  <data name="ToolTipAuthenticate" xml:space="preserve">
    <value>Authenticate to the tumblr.com network</value>
  </data>
  <data name="ToolTipAuthenticateDescription" xml:space="preserve">
    <value>Opens a browser window to authenticate yourself to the tumblr.com site. Allows the download of private blogs with your account. The access token to your account is saved and the authentication process needs to be done only once.</value>
  </data>
  <data name="ToolTipBlogs" xml:space="preserve">
    <value>Number of simultaneous processed blogs</value>
  </data>
  <data name="ToolTipBlogsDescription" xml:space="preserve">
    <value>Sets the Number of simultaneous processed blogs. Setting this to 2 would download data from two blogs at a time.</value>
  </data>
  <data name="ToolTipConnections" xml:space="preserve">
    <value>Number of total simultaneous connections</value>
  </data>
  <data name="ToolTipConnectionsDescription" xml:space="preserve">
    <value>Sets the Number of total simultaneous connections. The number is divided by the number of Parallel Blogs settings. 25/2 would open 12 connections per blog download.</value>
  </data>
  <data name="Notes" xml:space="preserve">
    <value>Personal Notes</value>
  </data>
  <data name="Bandwidth" xml:space="preserve">
    <value>Limit Bandwidth (kb/s)</value>
  </data>
  <data name="TimeOut" xml:space="preserve">
    <value>Timeout (s)</value>
  </data>
  <data name="EnableAutoDownload" xml:space="preserve">
    <value>Enable autodownload blogs and add</value>
  </data>
  <data name="Timer" xml:space="preserve">
    <value>at time (hh:mm:ss)</value>
  </data>
  <data name="Posts" xml:space="preserve">
    <value>Number of posts:</value>
  </data>
  <data name="ShowItems" xml:space="preserve">
    <value>Summary of {0} blogs</value>
  </data>
  <data name="SelectABlog" xml:space="preserve">
    <value>Please select a blog</value>
  </data>
  <data name="CopyUrl" xml:space="preserve">
    <value>Copy url</value>
  </data>
  <data name="Conversations" xml:space="preserve">
    <value>No. of Conversations:</value>
  </data>
  <data name="Preview" xml:space="preserve">
    <value>Preview:</value>
  </data>
  <data name="DetailsProgress" xml:space="preserve">
    <value>{0} of {1}, duplicates found: {2}</value>
  </data>
  <data name="DownloadAudios" xml:space="preserve">
    <value>Download audio files</value>
  </data>
  <data name="DownloadConversations" xml:space="preserve">
    <value>Download conversation posts</value>
  </data>
  <data name="DownloadLinks" xml:space="preserve">
    <value>Download link posts</value>
  </data>
  <data name="DownloadQuotes" xml:space="preserve">
    <value>Download quote posts</value>
  </data>
  <data name="DownloadTexts" xml:space="preserve">
    <value>Download regular posts</value>
  </data>
  <data name="EnablePreview" xml:space="preserve">
    <value>Preview on/off</value>
  </data>
  <data name="BlogSettings" xml:space="preserve">
    <value>Blog settings:</value>
  </data>
  <data name="BlogStatistics" xml:space="preserve">
    <value>Blog stats:</value>
  </data>
  <data name="GlobalSettings" xml:space="preserve">
    <value>Global settings:</value>
  </data>
  <data name="ToolTipDetailsStats" xml:space="preserve">
    <value>Number of downloaded post types / total post types</value>
  </data>
  <data name="ToolTipDetailsStatsDescription" xml:space="preserve">
    <value>Check to download post type or skip during the backup</value>
  </data>
  <data name="DownloadAudioMeta" xml:space="preserve">
    <value>Download audio meta</value>
  </data>
  <data name="DownloadImageMeta" xml:space="preserve">
    <value>Download image meta</value>
  </data>
  <data name="DownloadVideoMeta" xml:space="preserve">
    <value>Download video meta</value>
  </data>
  <data name="MetaAudio" xml:space="preserve">
    <value>Save audio meta</value>
  </data>
  <data name="MetaPhoto" xml:space="preserve">
    <value>Save photo meta</value>
  </data>
  <data name="MetaVideo" xml:space="preserve">
    <value>Save audio meta</value>
  </data>
  <data name="DefaultSettingsForBlogs" xml:space="preserve">
    <value>Settings applied to each blog upon addition:</value>
  </data>
  <data name="DownloadVideosShort" xml:space="preserve">
    <value>Download videos</value>
  </data>
  <data name="ToolTipDefaultSettingsForBlogs" xml:space="preserve">
    <value>Sets the default settings for newly added blogs.</value>
  </data>
  <data name="ToolTipDefaultSettingsForBlogsDescription" xml:space="preserve">
    <value>The backup uses indivual settings for each blog. To change them, select a blog in the main interface and select the Details window on the right hand side.</value>
  </data>
</root>